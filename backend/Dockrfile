# Use an official Python runtime as a parent image
FROM python:3.9-slim

# Set the working directory in the container
WORKDIR /app

# Copy the requirements file into the container at /app
COPY requirements.txt .

# Install any needed packages specified in requirements.txt
# Use --no-cache-dir to reduce image size
# Install build-essential etc. if needed for some packages (though unlikely for these deps)
RUN pip install --no-cache-dir -r requirements.txt

# Copy the rest of the backend application code into the container at /app
COPY app.py .
COPY transcript.json .

# Make port 5000 available to the world outside this container
EXPOSE 5000

# Define environment variable (optional, can be useful)
# ENV NAME World

# Run app.py when the container launches
# Use gunicorn for production later, but flask dev server is fine for this demo
CMD ["python", "app.py", "--host=0.0.0.0"]